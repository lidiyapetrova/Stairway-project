/*
 * Алгоритъмът, използван в този код, е прост алгоритъм, базиран на цикъл.
 * Той многократно премества текущата позиция напред или назад чрез добавяне или изваждане на
 * стойностите на стъпките, докато достигне целевата позиция или надвиши 500 стъпки. А
 * лгоритъмът не използва никакви усъвършенствани математически концепции или техники за оптимизация.
 * Това е директен подход с brute-force за решаване на проблема.
 */

using System;
using System.Collections.Generic;

namespace Vegetables
{
    class Program
    {
        static void Main(string[] args)
        {
            // Прочитане на входните данни. Разделят се по празно разстояние
            // и се записват в масив
            string[] input = Console.ReadLine().Split(' ');

            // ако не са въведени точно 4 стойности, значи имаме невалиден вход
            // програмата приключва изпълнение
            if (input.Length != 4)
            {
                return;
            }

            // преобразуване на входните данни в числа
            int x = int.Parse(input[0]);
            int y = int.Parse(input[1]);
            int a = int.Parse(input[2]);
            int b = int.Parse(input[3]);

            // Инициализиране на броя стъпки, предприети за постигане на целта
            int hops = 0;
            
            // Задаване на текущата позиция на началната позиция
            int currentStep = x;

            // Създаване на списък за съхраняване на последователността от позиции,
            // достигнати във всяка стъпка
            List<int> steps = new List<int>();
            steps.Add(x);

            // Свъздаване на цикъл за повтаряне, докато текущата позиция стане равна на целевата позиция
            while (currentStep != y)
            {
                // Ако текущата позиция е по-малка от целевата позиция
                if (currentStep < y)
                {
                    currentStep += a;

                    // Ако сегашната позиция е по-голяма от целевата позиция,
                    // преместете се назад, като извадите "b"
                    if (currentStep > y)
                    {
                        currentStep -= a;
                        currentStep -= b;
                    }
                }
                else // Ако текущата позиция е по-голяма от целевата позиция
                {
                    currentStep -= a;
                    
                    // Ако сегашната позиция е по-малка от целевата позиция,
                    // преминете напред, като добавите "b"
                    if (currentStep < y)
                    {
                        currentStep += a;
                        currentStep += b;
                    }
                }
                hops++;
                steps.Add(currentStep);
                
                // Ако броят на направените стъпки надвиши 500, прекратете играта
                if (hops > 500)
                {
                    Console.WriteLine("-1");
                    return;
                }
            }

            // Извеждане на броя на стъпки, направени за постигане на целта
            Console.WriteLine(hops);

            // Извеждане на последователността от позиции,
            // достигнати във всяка стъпка, разделени с интервал
            Console.WriteLine(string.Join(" ", steps));
        }
    }
}